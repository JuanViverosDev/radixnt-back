import { Users } from "src/users/entities/users.entity";
import { ProcessState } from "../entities/processState.entity";
import { RequestObservations } from "../entities/requestObservations.entity";
import { TypeRequest } from "../entities/typeRequest.entity";
import { CreateDisciplinedDto } from "./create-disciplined.dto";
import { Attachment } from "src/attachments/entities/attachment.entity";
export declare class UpdateRequestDto {
    userId: string;
    radicado: string;
    expediente: string;
    nombreSolicitante: string;
    calidadSolicitante: string;
    etapa: string;
    documentalTypeSelected: string;
    comunicationChannelSelected: string;
    direccionCorrespondencia: string;
    correo: string;
    telefono: string;
    nombreFuncionario: string;
    dependecia: string;
    positionSelected: string;
    systemState: boolean;
    userAgentSelected: string;
    agentSelected: Users;
    applicantType: string;
    applicantTypeRequest: TypeRequest;
    subject: string;
    authorIdentified: string;
    indagacionPrevia: string;
    disciplanaryInvestigation: string;
    recursoApelacion: string;
    procedeRecursoApelacion: string;
    decisionEvaluacion: string;
    continueInvestigation: string;
    decisionSegundaInstancia: string;
    decisionSegundaInstanciaOtros: string;
    confesar: string;
    tieneApoderado: string;
    procedeConfesion: string;
    medioJuzgamiento: string;
    aceptaCargos: string;
    apruebaPruebasCompletas: string;
    apelaFallo: string;
    presentaRecursoApelacionAutoDecisionPruebas: string;
    concedeRecurso: string;
    hayNulidad: string;
    archiveDisciplanaryInvestigation: string;
    recursoApelacionJuzgamiento: string;
    procedeRecursoApelacionJuzgamiento: string;
    continueInvestigationJuzgamiento: string;
    numberSettled: string;
    applicantName: string;
    employeeFullName: string;
    employeeDependency: string;
    employeePosition: string;
    employeeEmail: string;
    employeeAddress: string;
    fileNumber: string;
    nameRequester: string;
    userReceive: Users;
    expireDate: Date;
    state: ProcessState;
    state_id: string;
    disciplined: CreateDisciplinedDto[];
    requestObservations: RequestObservations[];
    attachments: Attachment[];
    complianceFacts?: Date;
    proceedingsNumbers: string[];
    enabled: boolean;
    requestStateId: number;
    cedulaSolicitante: string;
}
